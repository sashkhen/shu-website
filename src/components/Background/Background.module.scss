@use "../../styles/theme";

@mixin square() {
  border: var(--dot-border-width) solid var(--dot-color);
}

@mixin circle() {
  border-radius: 50%;
  border: var(--dot-border-width) solid var(--dot-color);
}

@mixin disc() {
  border-radius: 50%;
  background-color: var(--dot-color);
}

@mixin cross() {
  background-color: transparent;

  &::before,
  &::after {
    content: "";
    display: block;
    position: absolute;
    inset: 0;
    width: var(--dot-border-width);
    background-color: var(--dot-color);
    border-radius: 0.25rem;
  }

  &::before {
    transform: rotate(45deg);
  }

  &::after {
    transform: rotate(-45deg);
  }
}

.root {
  :root[data-theme-variant="plain"] & {
    --dot-color-1: var(--color-yellow);
    --dot-color-2: var(--color-orange);
    --dot-color-3: var(--color-green);
    --dot-color-4: var(--color-violet);
    --dot-color-5: var(--color-blue);
  }

  position: absolute;
  inset: 0;
  pointer-events: none;
  overflow: hidden;
  min-height: 100vh;
}

.dot {
  position: absolute;
  top: calc(var(--dot-top-start) + 100vh);
  left: var(--dot-left);
  display: block;
  width: 0;
  height: 0;
  opacity: 0;
  animation: dot-animation var(--dot-duration) linear infinite;

  :root[data-theme-variant="purple"] & {
    @include disc();
  }

  :root:not([data-theme-variant="purple"]) & {
    &:nth-child(3n + 1) {
      @include circle();
    }

    &:nth-child(3n + 2) {
      @include square();
    }

    &:nth-child(3n + 3) {
      @include cross();
    }
  }
}

@keyframes dot-animation {
  10% {
    width: var(--dot-size);
    height: var(--dot-size);
    opacity: var(--dot-opacity);
    transform: var(--dot-transform-1);
  }

  @for $i from 2 through 9 {
    #{$i * 10%} {
      transform: var(--dot-transform-#{$i});
    }
  }

  100% {
    top: var(--dot-top-end);
    transform: var(--dot-transform-10);
  }
}
